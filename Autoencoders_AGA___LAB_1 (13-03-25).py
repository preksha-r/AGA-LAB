# -*- coding: utf-8 -*-
"""AGA _ LAB 1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12swzwDJA1pZkYMpxu7b0Cdvlwrsu9QeP

**Autoencoders**
"""

import numpy as np
import tensorflow as tf
from tensorflow.keras import layers, models
from keras.datasets import fashion_mnist
import matplotlib.pyplot as plt


(x_train, _), (x_test, _) = fashion_mnist.load_data()


x_train = x_train.astype('float32') / 255.
x_test = x_test.astype('float32') / 255.


x_train = np.reshape(x_train, (len(x_train), 28, 28, 1))
x_test = np.reshape(x_test, (len(x_test), 28, 28, 1))


input_img = layers.Input(shape=(28, 28, 1))


x = layers.Flatten()(input_img)
x = layers.Dense(128, activation='relu')(x)
bottleneck = layers.Dense(64, activation='relu')(x)


x = layers.Dense(128, activation='relu')(bottleneck)
x = layers.Dense(28 * 28, activation='sigmoid')(x)
decoded_img = layers.Reshape((28, 28, 1))(x)


autoencoder = models.Model(input_img, decoded_img)


autoencoder.compile(optimizer='adam', loss='mean_squared_error')


autoencoder.fit(x_train, x_train,
                epochs=10,
                batch_size=256,
                shuffle=True,
                validation_data=(x_test, x_test))


reconstruction_loss = autoencoder.evaluate(x_test, x_test)
print(f'Reconstruction Loss: {reconstruction_loss}')


decoded_imgs = autoencoder.predict(x_test)


n = 6
plt.figure(figsize=(12, 6))
for i in range(n):
    ax = plt.subplot(2, n, i + 1)
    plt.imshow(x_test[i].reshape(28, 28), cmap='gray')
    plt.title("Original")
    plt.axis('off')

    ax = plt.subplot(2, n, i + 1 + n)
    plt.imshow(decoded_imgs[i].reshape(28, 28), cmap='gray')
    plt.title("Reconstructed")
    plt.axis('off')

plt.show()